version: '3'

networks:
  proxy:
    external: true

services:
  influx:
    container_name: influx
    hostname: influx
    image: influxdb:latest
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/influx/:/var/lib/influxdb
    restart: unless-stopped 

  sabnzbd:
    container_name: sabnzbd
    hostname: sabnzbd
    image: docker.io/linuxserver/sabnzbd:latest
    ports:
     - "8088:8080"
    volumes:
     - /mnt/synology_nfs/_prog/sabnzbd/:/config/
     - /mnt/synology_nfs/_cache/:/cache/
     - /mnt/synology_nfs/:/data/
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026
  sickchill:
    container_name: sickrage
    hostname: sickrage
    image: docker.io/linuxserver/sickchill:latest
    ports:
      - "8089:8081"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/:/config
      - /mnt/synology_nfs/_tv:/tv
      - /mnt/synology_nfs/_cache/:/downloads
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026
  couchpotato:
    container_name: couchpotato
    hostname: couchpotato
    image: docker.io/linuxserver/couchpotato
    ports:
      - "5050:5050"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/couchpotato/:/config/
      - /mnt/synology_nfs/_movies/:/movies/
      - /mnt/synology_nfs/_cache/:/downloads/
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026
 # db:
 #   container_name: db
 #   hostname: db
 #   image: linuxserver/mariadb
 #   ports:
 #     - "3306:3306"
 #   volumes:
 #     - /mnt/synology_nfs/_prog/mariadb:/var/lib/mysql
 #   restart: unless-stopped
 #   environment:
 #     - TZ=Europe/Amsterdam
 #     - PUID=1026
 #     - PGID=1026
 #     - MYSQL_DATABASE = homeassistant
 #     - MYSQL_ROOT_PASSWORD = "${MYSQL_ROOT_PASSWORD}"
 #     - MYSQL_USER = "${MYSQL_USER}"
 #     - MYSQL_PASSWORD = "${MYSQL_PASSWORD}"
  unifi:
    container_name: unifi
    image: docker.io/linuxserver/unifi:latest
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8443:8443"
      - "8843:8843"
      - "8880:8880"
      - "3478:3478/udp"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/unifi/:/config
    restart: always
    environment:
      - PUID=1026
      - PGID=1026
  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    user: "1026"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/grafana/:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - influx

  hass:
    container_name: hass
    image: docker.io/homeassistant/home-assistant:latest
    network_mode: "host"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/homeassistant/:/config/
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
      - "/dev/ttyUSB0:/dev/ttyUSB0"
#  watchtower:
#    container_name: watchtower
#    hostname: watchtower
#    image: v2tec/watchtower:latest
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    command: --schedule "0 2 * * * *"
#    restart: always
 # duplicati:
 #   container_name: duplicati
 #   hostname: duplicati
 #   image: docker.io/linuxserver/duplicati:latest
 #   ports:
 #     - "8200:8200"
 #   volumes:
 #     - /mnt/synology_nfs/_prog/:/backup/var/config/:ro
 #     - /mnt/synology_nfs/_prog/duplicati/:/config
 #   restart: always
 #   environment:
 #     - TZ=Europe/Amsterdam
 #     - PUID=1026
 #     - PGID=1026
