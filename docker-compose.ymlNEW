version: '3'

networks:
  proxy:
    external: true

services:
  traefik:
    container_name: traefik
    hostname: traefik
    image: traefik
    networks:
      - proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/synology_nfs/_prog/traefik/traefik.toml:/traefik.toml
      - /mnt/synology_nfs/_prog/traefik/acme.json:/acme.json
      - /mnt/synology_nfs/_prog/traefik/rules/:/rules/
      - /mnt/synology_nfs/_prog/traefik/.htpasswd:/.htpasswd:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    environment:
      - TZ=Europe\Amsterdam
    labels:
      - traefik.enable=true
      - traefik.port=8082
      - traefik.frontend.rule=Host:proxy.${DOMAIN}
      - traefik.frontend.auth.basic="${HTPW}"
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.STSSeconds=15552000
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.isDevelopment=false
  shellinabox:
    container_name: shellinabox
    hostname: shellinabox
    build: ./shellinabox
    image: docker.io/lvlie/shellinabox
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: always
    labels:
      - traefik.enable=true
      - traefik.port=4200
      - traefik.frontend.rule=Host:siab.${DOMAIN}
      - traefik.frontend.auth.basic="${HTPW}"
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.STSSeconds=15552000
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.isDevelopment=false

  sabnzbd:
    container_name: sabnzbd
    hostname: sabnzbd
    image: docker.io/linuxserver/sabnzbd:latest
    ports:
     - "8088:8080"
    volumes:
     - /mnt/synology_nfs/_prog/sabnzbd/:/config/
     - /mnt/synology_nfs/_cache/:/cache/
     - /mnt/synology_nfs/:/data/
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026
  sickrage:
    container_name: sickrage
    hostname: sickrage
    image: docker.io/linuxserver/sickrage:latest
    ports:
      - "8089:8081"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/:/config
      - /mnt/synology_nfs/_tv:/tv
      - /mnt/synology_nfs/_cache/:/downloads
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026
  couchpotato:
    container_name: couchpotato
    hostname: couchpotato
    image: docker.io/linuxserver/couchpotato
    ports:
      - "5050:5050"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/couchpotato/:/config/
      - /mnt/synology_nfs/_movies/:/movies/
      - /mnt/synology_nfs/_cache/:/downloads/
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026
  sonarr:
    container_name: sonarr
    hostname: sonarr
    image: docker.io/linuxserver/sonarr:latest
    ports:
      - "8989:8989/tcp"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/sonarr:/config/
      - /mnt/synology_nfs/_tv:/tv
      - /mnt/synology_nfs/_cache:/downloads/
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026
  unifi:
    container_name: unifi
    image: docker.io/linuxserver/unifi:latest
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8443:8443"
      - "8843:8843"
      - "8880:8880"
      - "3478:3478/udp"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/unifi/:/config
    restart: always
    environment:
      - PUID=1026
      - PGID=1026
  hass:
    container_name: hass
    image: docker.io/homeassistant/home-assistant:latest
    network_mode: "host"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/synology_nfs/_prog/homeassistant/:/config/
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    restart: always
  watchtower:
    container_name: watchtower
    hostname: watchtower
    image: v2tec/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 2 * * * *"
    restart: always
  duplicati:
    container_name: duplicati
    hostname: duplicati
    image: docker.io/linuxserver/duplicati:latest
    ports:
      - "8200:8200"
    volumes:
      - /mnt/synology_nfs/_prog/:/backup/var/config/:ro
      - /mnt/synology_nfs/_prog/duplicati/:/config
    restart: always
    environment:
      - TZ=Europe/Amsterdam
      - PUID=1026
      - PGID=1026